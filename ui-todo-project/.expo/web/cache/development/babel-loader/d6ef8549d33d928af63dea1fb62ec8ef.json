{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Study\\\\goIT\\\\Ropositories\\\\Udemy-react-native\\\\ui-react-native\\\\ui-todo-project\\\\src\\\\SwitchComponent.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var SwitchComponent = function SwitchComponent() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Study/goIT/Ropositories/Udemy-react-native/ui-react-native/ui-todo-project/src/SwitchComponent.js"],"names":["React","useState","SwitchComponent","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","false","true","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,kBACDD,QAAQ,CAAC,KAAD,CADP;AAAA;AAAA,MAC5BE,SAD4B;AAAA,MACjBC,YADiB;;AAEnC,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,YAAY,CAAC,UAACE,aAAD;AAAA,aAAmB,CAACA,aAApB;AAAA,KAAD,CAAlB;AAAA,GAArB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADd;AAEE,IAAA,UAAU,EAAEP,SAAS,GAAG,SAAH,GAAe,SAFtC;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,aAAa,EAAEE,YAJjB;AAKE,IAAA,KAAK,EAAEF,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CAfM;AAiBP,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Switch, StyleSheet } from \"react-native\";\r\n\r\nexport const SwitchComponent = () => {\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Switch\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={isEnabled}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}