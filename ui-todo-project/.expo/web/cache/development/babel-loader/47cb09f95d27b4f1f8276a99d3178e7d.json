{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Study\\\\goIT\\\\Ropositories\\\\Udemy-react-native\\\\ui-react-native\\\\ui-todo-project\\\\src\\\\components\\\\AddTodo.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { THEME } from \"../../theme\";\nexport var AddTodo = function AddTodo(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var getValue = function getValue(text) {\n    setValue(text);\n  };\n\n  var pressHandler = function pressHandler() {\n    if (value.trim()) {\n      onSubmit(value);\n      setValue(\"\");\n      Keyboard.dismiss();\n    } else {\n      Alert.alert(\"Task can't be an empty\");\n      Keyboard.dismiss();\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    value: value,\n    onChangeText: getValue,\n    placeholder: \"Enter new task...\",\n    autoCorrect: true,\n    autoCapitalize: \"sentences\",\n    keyboardType: \"numbers-and-punctuation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Add new task\",\n    onPress: pressHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  block: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 14\n  },\n  input: {\n    width: \"60%\",\n    padding: 8,\n    borderStyle: \"solid\",\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.MAIN_COLOR\n  }\n});","map":{"version":3,"sources":["D:/Study/goIT/Ropositories/Udemy-react-native/ui-react-native/ui-todo-project/src/components/AddTodo.js"],"names":["React","useState","THEME","AddTodo","onSubmit","value","setValue","getValue","text","pressHandler","trim","Keyboard","dismiss","Alert","alert","styles","block","input","StyleSheet","create","flexDirection","justifyContent","alignItems","marginBottom","width","padding","borderStyle","borderBottomWidth","borderBottomColor","MAIN_COLOR"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,SAASC,KAAT;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACbH,QAAQ,CAAC,EAAD,CADK;AAAA;AAAA,MAChCI,KADgC;AAAA,MACzBC,QADyB;;AAEvC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBF,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIJ,KAAK,CAACK,IAAN,EAAJ,EAAkB;AAChBN,MAAAA,QAAQ,CAACC,KAAD,CAAR;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAK,MAAAA,QAAQ,CAACC,OAAT;AACD,KAJD,MAIO;AACLC,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACAH,MAAAA,QAAQ,CAACC,OAAT;AACD;AACF,GATD;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,IAAA,KAAK,EAAEZ,KAFT;AAGE,IAAA,YAAY,EAAEE,QAHhB;AAME,IAAA,WAAW,EAAC,mBANd;AAOE,IAAA,WAAW,EAAE,IAPf;AAQE,IAAA,cAAc,EAAC,WARjB;AASE,IAAA,YAAY,EAAC,yBATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAEE,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAhCM;AAkCP,IAAMM,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,aAAa,EAAE,KADV;AAGLC,IAAAA,cAAc,EAAE,eAHX;AAILC,IAAAA,UAAU,EAAE,QAJP;AAKLC,IAAAA,YAAY,EAAE;AALT,GADwB;AAQ/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,OAAO,EAAE,CAFJ;AAGLC,IAAAA,WAAW,EAAE,OAHR;AAILC,IAAAA,iBAAiB,EAAE,CAJd;AAKLC,IAAAA,iBAAiB,EAAE1B,KAAK,CAAC2B;AALpB;AARwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Button,\r\n  TextInput,\r\n  StyleSheet,\r\n  Keyboard,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { THEME } from \"../../theme\";\r\n\r\nexport const AddTodo = ({ onSubmit }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const getValue = (text) => {\r\n    setValue(text);\r\n  };\r\n\r\n  const pressHandler = () => {\r\n    if (value.trim()) {\r\n      onSubmit(value);\r\n      setValue(\"\");\r\n      Keyboard.dismiss();\r\n    } else {\r\n      Alert.alert(\"Task can't be an empty\");\r\n      Keyboard.dismiss();\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.block}>\r\n      <TextInput\r\n        style={styles.input}\r\n        value={value}\r\n        onChangeText={getValue}\r\n        // onChangeText={(text) => setValue(text)}\r\n        // onChangeText={setValue}\r\n        placeholder=\"Enter new task...\"\r\n        autoCorrect={true}\r\n        autoCapitalize=\"sentences\"\r\n        keyboardType=\"numbers-and-punctuation\"\r\n      />\r\n      <Button title=\"Add new task\" onPress={pressHandler} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  block: {\r\n    flexDirection: \"row\",\r\n    // marginTop: 20,\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 14,\r\n  },\r\n  input: {\r\n    width: \"60%\",\r\n    padding: 8,\r\n    borderStyle: \"solid\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: THEME.MAIN_COLOR,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}